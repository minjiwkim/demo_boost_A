// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Group {
  id           Int       @id @default(autoincrement())
  name         String
  imageUrl     String
  isPublic     Boolean
  likeCount    Int       @default(0)
  badges       Badges[] 
  postCount    Int       @default(0)
  createdAt    DateTime  @default(now())
  introduction String
  password     Password?
  badgeCount Int @default(0)
}

model Password {
  id       Int    @id @default(autoincrement())
  group    Group  @relation(fields: [groupId], references: [id], onDelete: Cascade)
  groupId  Int    @unique
  password String
}

model Badges {
  id          Int      @id @default(autoincrement())
  name        String
  description String
  groupId     Int
  group       Group    @relation(fields: [groupId], references: [id])
  createdAt   DateTime @default(now())

  @@index([groupId])
}

model Post {
  id        Int      @id @default(autoincrement())
  nickname  String
  title     String
  imageUrl  String?
  content   String
  tags      String?
  location  String?
  moment    DateTime
  isPublic  Boolean  @default(true)
  password  String
  likes     Int      @default(0)
  createdAt DateTime @default(now())
  groupId   Int
  group     Group    @relation(fields: [groupId], references: [id])
}

model Comment {
  id          Int      @id @default(autoincrement())
  nickname    String
  content     String
  password    String
  createdAt   DateTime @default(now())
  postId      Int
  post        Post     @relation(fields: [postId], references: [id])

  @@index([postId])
}
